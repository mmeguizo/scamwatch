<<<<<<< HEAD
{"version":3,"sources":["./src/app/login/login-routing.modules.ts","./src/app/login/login.component.html","./src/app/login/login.component.ts","./src/app/login/login.module.ts","./src/app/login/modals/test/test.component.html","./src/app/login/modals/test/test.component.ts"],"names":[],"mappings":"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","file":"app-login-login-module-ngfactory-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule, } from '@angular/router';\r\nimport { LoginComponent } from './login.component';\r\nimport { NotAuthGuard } from '../guard/notAuth.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginComponent,\r\n    // canActivate: [NotAuthGuard]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LoginRoutingModule { }\r\n","<nb-layout>\r\n  <nb-layout-column>\r\n    <div class=\"wrapper\">\r\n      <div class=\"container\">\r\n        <img src=\"../../assets//images/scam.png\" class=\"tinker-logo\">\r\n        <!-- <img src=\"../../assets//images/chsmc.png\" class=\"tinker-logo\"> -->\r\n        <h2 style=\"z-index: 9999999\">ScamWatch PH</h2>\r\n        <div class=\"form-text error\">\r\n          {{ msg }}\r\n          <toaster-container [toasterconfig]=\"config\">\r\n          </toaster-container>\r\n        </div>\r\n\r\n        <!-- <form class=\"form\" #f=\"ngForm\">\r\n        <input ng-model=\"login\" type=\"text\" placeholder=\"Username\" [(ngModel)]=\"username\" id=\"username\" #userName=\"ngModel\" name=\"username\" required>\r\n        <input ng-model=\"pwd\" type=\"password\" placeholder=\"Password\" [(ngModel)]=\"password\"  #passWord=\"ngModel\" name=\"password\" id=\"password\" required>\r\n        <button type=\"submit\" id=\"login-button\" (click)=\" onLoginSubmit()\" [disabled]=\"f.invalid\" [nbSpinner]=\"\" nbSpinnerStatus=\"success\">Login</button>\r\n      </form> -->\r\n        <form [formGroup]=\"form\" (submit)=\"onLoginSubmit()\">\r\n          <div class=\"form-group\">\r\n            <label style=\"color:white\" for=\"username\">Username</label>\r\n            <div\r\n              [ngClass]=\"{'has-error': form.controls.username.errors && form.controls.username.dirty, 'has-success': form.controls.username.valid && form.controls.username.dirty }\">\r\n              <input class=\"form-control\" type=\"text\" name=\"username\" formControlName=\"username\" />\r\n              <ul class=\"help-block\">\r\n                <li *ngIf=\"form.controls.username.errors?.required && form.controls.username.dirty\">This field is\r\n                  required.</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label style=\"color:white\" for=\"password\">Password</label>\r\n            <div\r\n              [ngClass]=\"{'has-error': form.controls.password.errors && form.controls.password.dirty, 'has-success': form.controls.password.valid && form.controls.password.dirty }\">\r\n              <input class=\"form-control\" type=\"password\" name=\"password\" formControlName=\"password\" />\r\n              <ul class=\"help-block\">\r\n                <li *ngIf=\"form.controls.password.errors?.required && form.controls.password.dirty\">This field is\r\n                  required.</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <input [disabled]=\"!form.valid || processing\" class=\"btn btn-primary\" type=\"submit\" value=\"Login\" />\r\n        </form>\r\n\r\n      </div>\r\n    </div>\r\n  </nb-layout-column>\r\n</nb-layout>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, AbstractControl, FormBuilder, Validators, NgForm } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n// import { routerTransition } from '../router.animation';\r\n// import { AuthService } from '../@core/services/auth.service';\r\n// import { SharedGlobalService } from '../@core/services/shared.global.service';\r\nimport { NbDialogService } from '@nebular/theme';\r\nimport { ToasterService, ToasterConfig } from 'angular2-toaster';\r\nimport { ConnectionService } from '../@core/services/connection.service';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { TestComponent } from './modals/test/test.component';\r\n// import { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n  // animations: [routerTransition()]\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  username: String;\r\n  password: String;\r\n  msg: String;\r\n  loader = false;\r\n  disableSubmit;\r\n  conn;\r\n  userID;\r\n\r\n  messageClass;\r\n  message;\r\n  processing = false;\r\n  form: FormGroup;\r\n\r\n  public config: ToasterConfig =\r\n    new ToasterConfig({\r\n      showCloseButton: true,\r\n      tapToDismiss: false,\r\n      timeout: 0\r\n    });\r\n\r\n\r\n  constructor(\r\n    // public sgs: SharedGlobalService,\r\n    // public authService: AuthService,\r\n    private dialogService: NbDialogService,\r\n    public cs: ConnectionService,\r\n    private formBuilder: FormBuilder,\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private toastr: ToasterService,\r\n\r\n  ) {\r\n    // sgs.setBrowserTitle.emit('Login');\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  createForm() {\r\n    this.form = this.formBuilder.group({\r\n      username: ['', Validators.required], // Username field\r\n      password: ['', Validators.required] // Password field\r\n    });\r\n  }\r\n\r\n  enableForm() {\r\n    this.form.controls['username'].enable(); // Enable username field\r\n    this.form.controls['password'].enable(); // Enable password field\r\n  }\r\n\r\n  disableForm() {\r\n    this.form.controls['username'].disable(); // Disable username field\r\n    this.form.controls['password'].disable(); // Disable password field\r\n  }\r\n  Submit() {\r\n    const user = {\r\n      username: this.username,\r\n      password: this.password,\r\n    };\r\n\r\n  }\r\n  // Functiont to submit form and login user\r\n  onLoginSubmit() {\r\n    this.processing = true; // Used to submit button while is being processed\r\n    this.disableForm(); // Disable form while being process\r\n    // Create user object from user's input\r\n    const user = {\r\n      username: this.form.get('username').value, // Username input field\r\n      password: this.form.get('password').value // Password input field\r\n    }\r\n\r\n    // Function to send login data to API\r\n    this.authService.login(user).subscribe((data: any) => {\r\n\r\n      // Check if response was a success or error\r\n      if (!data.success) {\r\n        // this.messageClass = 'alert alert-danger'; // Set bootstrap error class\r\n        // this.message = data.message; // Set error message\r\n        //  this.toastr.error('Failed', data.message);\r\n        this.toastr.pop('error', 'Failed', data.message);\r\n\r\n\r\n        this.processing = false; // Enable submit button\r\n        this.enableForm(); // Enable form for editting\r\n\r\n\r\n\r\n      } else {\r\n        // this.messageClass = 'alert alert-success'; // Set bootstrap success class\r\n        // this.message = data.message; // Set success message\r\n        //  this.toastr.success('Success', data.message);\r\n        this.toastr.pop('success', 'Success', data.message);\r\n\r\n        // Function to store user's token in client local storage\r\n        this.authService.storeUserData(data.token, data.user, data.userToken);\r\n\r\n\r\n        if (this.authService.CurrentlyloggedIn()) {\r\n          console.log(this.authService.CurrentlyloggedIn());\r\n          setTimeout(() => {\r\n            this.router.navigate([data.role]); // Navigate to dashboard view\r\n          }, 1000);\r\n\r\n        } else {\r\n          this.authService.logout()\r\n          this.router.navigate(['login']); // Navigate to dashboard view\r\n        }\r\n\r\n        // After 2 seconds, redirect to dashboard page\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  showBootstrapModal() {\r\n    // this.sgs.Modal({\r\n    //     header: `Notice`,\r\n    //     content: `\r\n    //     test\r\n    //     `,\r\n    //     buttonName: 'close'\r\n    //   }, { size: 'md'});\r\n  }\r\n\r\n  showMaterialModal() {\r\n    this.dialogService.open(TestComponent, {\r\n      context: {\r\n        title: 'This is a title passed to the dialog component',\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LoginRoutingModule } from './login-routing.modules';\r\nimport { LoginComponent } from './login.component';\r\nimport { ThemeModule } from '../@theme/theme.module';\r\nimport { NbSpinnerModule } from '@nebular/theme';\r\nimport { NbCardModule, NbButtonModule } from '@nebular/theme';\r\nimport { NbLayoutModule } from '@nebular/theme';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { TestComponent } from './modals/test/test.component';\r\nimport { ToasterModule } from 'angular2-toaster';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ThemeModule,\r\n    LoginRoutingModule,\r\n    NbSpinnerModule,\r\n    NbCardModule,\r\n    NbLayoutModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NbButtonModule,\r\n    ToasterModule.forChild()\r\n\r\n  ],\r\n  declarations: [LoginComponent, TestComponent],\r\n  entryComponents: [\r\n    TestComponent\r\n  ]\r\n})\r\nexport class LoginModule { }\r\n","<nb-card>\r\n    <nb-card-header>{{ title }}</nb-card-header>\r\n    <nb-card-body>\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-12\">\r\n          TEST\r\n        </div>\r\n      </div>\r\n    </nb-card-body>\r\n    <nb-card-footer>\r\n      <button nbButton matRipple hero status=\"primary\" (click)=\"dismiss()\">Dismiss Dialog</button>\r\n    </nb-card-footer>\r\n</nb-card>\r\n  ","import { Component, OnInit, Input } from '@angular/core';\r\nimport { NbDialogRef } from '@nebular/theme';\r\n\r\n@Component({\r\n  selector: 'ngx-test',\r\n  templateUrl: './test.component.html',\r\n  styleUrls: ['./test.component.scss']\r\n})\r\nexport class TestComponent implements OnInit {\r\n\r\n  @Input() title: String;\r\n\r\n  constructor(protected ref: NbDialogRef<TestComponent>) {}\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  dismiss() {\r\n    this.ref.close();\r\n  }\r\n  \r\n}\r\n\r\n"],"sourceRoot":"webpack:///"}
=======
{"version":3,"sources":["./src/app/login/login-routing.modules.ts","./src/app/login/login.component.html","./src/app/login/login.component.ts","./src/app/login/login.module.ts","./src/app/login/modals/test/test.component.html","./src/app/login/modals/test/test.component.ts"],"names":[],"mappings":"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","file":"app-login-login-module-ngfactory-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule, } from '@angular/router';\r\nimport { LoginComponent } from './login.component';\r\nimport { NotAuthGuard } from '../guard/notAuth.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginComponent,\r\n    // canActivate: [NotAuthGuard]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LoginRoutingModule { }\r\n","<nb-layout>\r\n  <nb-layout-column>\r\n    <div class=\"wrapper\">\r\n      <nb-card-header style=\"border-bottom: none\">\r\n        <button nbButton status=\"danger\" (click)=\" backToSearch()\"ghost>\r\n          {{ \"Back to Search\" }}\r\n        </button></nb-card-header\r\n      >\r\n      <div class=\"container\">\r\n        <img src=\"../../assets//images/scam.png\" class=\"tinker-logo\" />\r\n        <!-- <img src=\"../../assets//images/chsmc.png\" class=\"tinker-logo\"> -->\r\n        <h2 style=\"z-index: 9999999\">ScamWatch PH</h2>\r\n        <div class=\"form-text error\">\r\n          {{ msg }}\r\n          <toaster-container [toasterconfig]=\"config\"> </toaster-container>\r\n        </div>\r\n\r\n        <!-- <form class=\"form\" #f=\"ngForm\">\r\n        <input ng-model=\"login\" type=\"text\" placeholder=\"Username\" [(ngModel)]=\"username\" id=\"username\" #userName=\"ngModel\" name=\"username\" required>\r\n        <input ng-model=\"pwd\" type=\"password\" placeholder=\"Password\" [(ngModel)]=\"password\"  #passWord=\"ngModel\" name=\"password\" id=\"password\" required>\r\n        <button type=\"submit\" id=\"login-button\" (click)=\" onLoginSubmit()\" [disabled]=\"f.invalid\" [nbSpinner]=\"\" nbSpinnerStatus=\"success\">Login</button>\r\n      </form> -->\r\n        <form [formGroup]=\"form\" (submit)=\"onLoginSubmit()\">\r\n          <div class=\"form-group\">\r\n            <label style=\"color: white\" for=\"username\">Username</label>\r\n            <div\r\n              [ngClass]=\"{\r\n                'has-error':\r\n                  form.controls.username.errors && form.controls.username.dirty,\r\n                'has-success':\r\n                  form.controls.username.valid && form.controls.username.dirty\r\n              }\"\r\n            >\r\n              <input\r\n                class=\"form-control\"\r\n                type=\"text\"\r\n                name=\"username\"\r\n                formControlName=\"username\"\r\n              />\r\n              <ul class=\"help-block\">\r\n                <li\r\n                  *ngIf=\"\r\n                    form.controls.username.errors?.required &&\r\n                    form.controls.username.dirty\r\n                  \"\r\n                >\r\n                  This field is required.\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label style=\"color: white\" for=\"password\">Password</label>\r\n            <div\r\n              [ngClass]=\"{\r\n                'has-error':\r\n                  form.controls.password.errors && form.controls.password.dirty,\r\n                'has-success':\r\n                  form.controls.password.valid && form.controls.password.dirty\r\n              }\"\r\n            >\r\n              <input\r\n                class=\"form-control\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                formControlName=\"password\"\r\n              />\r\n              <ul class=\"help-block\">\r\n                <li\r\n                  *ngIf=\"\r\n                    form.controls.password.errors?.required &&\r\n                    form.controls.password.dirty\r\n                  \"\r\n                >\r\n                  This field is required.\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <input\r\n            [disabled]=\"!form.valid || processing\"\r\n            class=\"btn btn-primary\"\r\n            type=\"submit\"\r\n            value=\"Login\"\r\n          />\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </nb-layout-column>\r\n</nb-layout>\r\n<button nbButton status=\"success\" ghost>\r\n  {{ \"Back to Search\" }}\r\n</button>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, AbstractControl, FormBuilder, Validators, NgForm } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n// import { routerTransition } from '../router.animation';\r\n// import { AuthService } from '../@core/services/auth.service';\r\n// import { SharedGlobalService } from '../@core/services/shared.global.service';\r\nimport { NbDialogService } from '@nebular/theme';\r\nimport { ToasterService, ToasterConfig } from 'angular2-toaster';\r\nimport { ConnectionService } from '../@core/services/connection.service';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { TestComponent } from './modals/test/test.component';\r\n// import { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n  // animations: [routerTransition()]\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  username: String;\r\n  password: String;\r\n  msg: String;\r\n  loader = false;\r\n  disableSubmit;\r\n  conn;\r\n  userID;\r\n\r\n  messageClass;\r\n  message;\r\n  processing = false;\r\n  form: FormGroup;\r\n\r\n  public config: ToasterConfig =\r\n    new ToasterConfig({\r\n      showCloseButton: true,\r\n      tapToDismiss: false,\r\n      timeout: 0\r\n    });\r\n\r\n\r\n  constructor(\r\n    // public sgs: SharedGlobalService,\r\n    // public authService: AuthService,\r\n    private dialogService: NbDialogService,\r\n    public cs: ConnectionService,\r\n    private formBuilder: FormBuilder,\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private toastr: ToasterService,\r\n\r\n  ) {\r\n    // sgs.setBrowserTitle.emit('Login');\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  createForm() {\r\n    this.form = this.formBuilder.group({\r\n      username: ['', Validators.required], // Username field\r\n      password: ['', Validators.required] // Password field\r\n    });\r\n  }\r\n\r\n  enableForm() {\r\n    this.form.controls['username'].enable(); // Enable username field\r\n    this.form.controls['password'].enable(); // Enable password field\r\n  }\r\n\r\n  disableForm() {\r\n    this.form.controls['username'].disable(); // Disable username field\r\n    this.form.controls['password'].disable(); // Disable password field\r\n  }\r\n  Submit() {\r\n    const user = {\r\n      username: this.username,\r\n      password: this.password,\r\n    };\r\n\r\n  }\r\n  // Functiont to submit form and login user\r\n  onLoginSubmit() {\r\n    this.processing = true; // Used to submit button while is being processed\r\n    this.disableForm(); // Disable form while being process\r\n    // Create user object from user's input\r\n    const user = {\r\n      username: this.form.get('username').value, // Username input field\r\n      password: this.form.get('password').value // Password input field\r\n    }\r\n\r\n    // Function to send login data to API\r\n    this.authService.login(user).subscribe((data: any) => {\r\n\r\n      // Check if response was a success or error\r\n      if (!data.success) {\r\n        // this.messageClass = 'alert alert-danger'; // Set bootstrap error class\r\n        // this.message = data.message; // Set error message\r\n        //  this.toastr.error('Failed', data.message);\r\n        this.toastr.pop('error', 'Failed', data.message);\r\n\r\n\r\n        this.processing = false; // Enable submit button\r\n        this.enableForm(); // Enable form for editting\r\n\r\n\r\n\r\n      } else {\r\n        // this.messageClass = 'alert alert-success'; // Set bootstrap success class\r\n        // this.message = data.message; // Set success message\r\n        //  this.toastr.success('Success', data.message);\r\n        this.toastr.pop('success', 'Success', data.message);\r\n\r\n        // Function to store user's token in client local storage\r\n        this.authService.storeUserData(data.token, data.user, data.userToken, data.id);\r\n\r\n\r\n        if (this.authService.CurrentlyloggedIn()) {\r\n          console.log(this.authService.CurrentlyloggedIn());\r\n          setTimeout(() => {\r\n            this.router.navigate([data.role]); // Navigate to dashboard view\r\n          }, 1000);\r\n\r\n        } else {\r\n          this.authService.logout()\r\n          this.router.navigate(['login']); // Navigate to dashboard view\r\n        }\r\n\r\n        // After 2 seconds, redirect to dashboard page\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  showBootstrapModal() {\r\n    // this.sgs.Modal({\r\n    //     header: `Notice`,\r\n    //     content: `\r\n    //     test\r\n    //     `,\r\n    //     buttonName: 'close'\r\n    //   }, { size: 'md'});\r\n  }\r\n\r\n  showMaterialModal() {\r\n    this.dialogService.open(TestComponent, {\r\n      context: {\r\n        title: 'This is a title passed to the dialog component',\r\n      },\r\n    });\r\n  }\r\n\r\n\r\n  backToSearch(){\r\n\r\n    this.router.navigate(['app/viewscammer'])\r\n\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LoginRoutingModule } from './login-routing.modules';\r\nimport { LoginComponent } from './login.component';\r\nimport { ThemeModule } from '../@theme/theme.module';\r\nimport { NbSpinnerModule } from '@nebular/theme';\r\nimport { NbCardModule, NbButtonModule } from '@nebular/theme';\r\nimport { NbLayoutModule } from '@nebular/theme';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { TestComponent } from './modals/test/test.component';\r\nimport { ToasterModule } from 'angular2-toaster';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ThemeModule,\r\n    LoginRoutingModule,\r\n    NbSpinnerModule,\r\n    NbCardModule,\r\n    NbLayoutModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NbButtonModule,\r\n    ToasterModule.forChild()\r\n\r\n  ],\r\n  declarations: [LoginComponent, TestComponent],\r\n  entryComponents: [\r\n    TestComponent\r\n  ]\r\n})\r\nexport class LoginModule { }\r\n","<nb-card>\r\n    <nb-card-header>{{ title }}</nb-card-header>\r\n    <nb-card-body>\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-12\">\r\n          TEST\r\n        </div>\r\n      </div>\r\n    </nb-card-body>\r\n    <nb-card-footer>\r\n      <button nbButton matRipple hero status=\"primary\" (click)=\"dismiss()\">Dismiss Dialog</button>\r\n    </nb-card-footer>\r\n</nb-card>\r\n  ","import { Component, OnInit, Input } from '@angular/core';\r\nimport { NbDialogRef } from '@nebular/theme';\r\n\r\n@Component({\r\n  selector: 'ngx-test',\r\n  templateUrl: './test.component.html',\r\n  styleUrls: ['./test.component.scss']\r\n})\r\nexport class TestComponent implements OnInit {\r\n\r\n  @Input() title: String;\r\n\r\n  constructor(protected ref: NbDialogRef<TestComponent>) {}\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  dismiss() {\r\n    this.ref.close();\r\n  }\r\n  \r\n}\r\n\r\n"],"sourceRoot":"webpack:///"}
>>>>>>> c5c8d768db983260b4219bb9a11e801b90a8f784
